<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->

<node>
    <name>BackendComputedTest</name>
    <primaryNodeType>cards:Questionnaire</primaryNodeType>
    <property>
        <name>title</name>
        <value>Backend Computed Test - Invalid Names</value>
        <type>String</type>
    </property>
    <property>
        <name>description</name>
        <value>CARDS-1800</value>
        <type>String</type>
    </property>
    <node>
        <name>testing-instructions</name>
        <primaryNodeType>cards:Information</primaryNodeType>
        <property>
            <name>text</name>
            <value>This form is designed to test both front end and back end computed questions.

To test front end computed question handling, use the `admin` or `testuser` accounts to fill out this form.
These users can complete all questions in this form, so the front end will calculate the computed questions.

To test the back end computed questions, use the `computedtestuser` account (password: `testpassword`).
This account has permission to view and edit the user questions, but not the computed questions.
As a result, creating and completing this form with `computedtestuser` will force the backend to calculate the computed questions,
which can then be verified for accuracy by opening the form in read mode with the `admin` or normal `testuser` accounts.</value>
            <type>String</type>
        </property>
    </node>

    <node>
        <name>userquestions</name>
        <primaryNodeType>cards:Section</primaryNodeType>
        <property>
            <name>label</name>
            <value>User Questions</value>
            <type>String</type>
        </property>
        <node>
            <name>question1</name>
            <primaryNodeType>cards:Question</primaryNodeType>
            <property>
                <name>text</name>
                <value>Question 1: Valid variable name</value>
                <type>String</type>
            </property>
            <property>
                <name>dataType</name>
                <value>long</value>
                <type>String</type>
            </property>
            <property>
                <name>displayMode</name>
                <value>input</value>
                <type>String</type>
            </property>
            <property>
                <name>maxAnswers</name>
                <value>1</value>
                <type>Long</type>
            </property>
            <property>
                <name>compact</name>
                <value>True</value>
                <type>Boolean</type>
            </property>
        </node>
        <node>
            <name>2question</name>
            <primaryNodeType>cards:Question</primaryNodeType>
            <property>
                <name>text</name>
                <value>Question 2: Invalid variable name (Starts with number)</value>
                <type>String</type>
            </property>
            <property>
                <name>dataType</name>
                <value>long</value>
                <type>String</type>
            </property>
            <property>
                <name>displayMode</name>
                <value>input</value>
                <type>String</type>
            </property>
            <property>
                <name>maxAnswers</name>
                <value>1</value>
                <type>Long</type>
            </property>
            <property>
                <name>compact</name>
                <value>True</value>
                <type>Boolean</type>
            </property>
        </node>
        <node>
            <name>question 3</name>
            <primaryNodeType>cards:Question</primaryNodeType>
            <property>
                <name>text</name>
                <value>Question 3: Invalid variable name (contains space)</value>
                <type>String</type>
            </property>
            <property>
                <name>dataType</name>
                <value>long</value>
                <type>String</type>
            </property>
            <property>
                <name>displayMode</name>
                <value>input</value>
                <type>String</type>
            </property>
            <property>
                <name>maxAnswers</name>
                <value>1</value>
                <type>Long</type>
            </property>
            <property>
                <name>compact</name>
                <value>True</value>
                <type>Boolean</type>
            </property>
        </node>
        <node>
            <name>question4_multi</name>
            <primaryNodeType>cards:Question</primaryNodeType>
            <property>
                <name>text</name>
                <value>Question 4: Multi-valued answer</value>
                <type>String</type>
            </property>
            <property>
                <name>maxAnswers</name>
                <value>0</value>
                <type>Long</type>
            </property>
        </node>
    </node>
    <node>
       <name>computedquestions</name>
       <primaryNodeType>cards:Section</primaryNodeType>
       <property>
           <name>label</name>
           <value>Computed Questions</value>
            <type>String</type>
        </property>
        <node>
            <name>question1computed</name>
            <primaryNodeType>cards:Question</primaryNodeType>
            <property>
                <name>text</name>
                <value>Question 1 Computed. Should equal question 1</value>
                <type>String</type>
            </property>
            <property>
                <name>dataType</name>
                <value>long</value>
                <type>String</type>
            </property>
            <property>
                <name>displayMode</name>
                <value>input</value>
                <type>String</type>
            </property>
            <property>
                <name>maxAnswers</name>
                <value>1</value>
                <type>Long</type>
            </property>
            <property>
                <name>compact</name>
                <value>True</value>
                <type>Boolean</type>
            </property>
            <property>
                <name>entryMode</name>
                <value>computed</value>
                <type>String</type>
            </property>
            <property>
                <name>expression</name>
                <value>return @{question1}</value>
                <type>String</type>
            </property>
        </node>
        <node>
            <name>question2computed</name>
            <primaryNodeType>cards:Question</primaryNodeType>
            <property>
                <name>text</name>
                <value>Question 2 Computed. Should equal question 2</value>
                <type>String</type>
            </property>
            <property>
                <name>dataType</name>
                <value>long</value>
                <type>String</type>
            </property>
            <property>
                <name>displayMode</name>
                <value>input</value>
                <type>String</type>
            </property>
            <property>
                <name>maxAnswers</name>
                <value>1</value>
                <type>Long</type>
            </property>
            <property>
                <name>compact</name>
                <value>True</value>
                <type>Boolean</type>
            </property>
            <property>
                <name>entryMode</name>
                <value>computed</value>
                <type>String</type>
            </property>
            <property>
                <name>expression</name>
                <value>return @{2question}</value>
                <type>String</type>
            </property>
        </node>
        <node>
            <name>question3computed</name>
            <primaryNodeType>cards:Question</primaryNodeType>
            <property>
                <name>text</name>
                <value>Question 3 Computed. Should equal question 3</value>
                <type>String</type>
            </property>
            <property>
                <name>dataType</name>
                <value>long</value>
                <type>String</type>
            </property>
            <property>
                <name>displayMode</name>
                <value>input</value>
                <type>String</type>
            </property>
            <property>
                <name>maxAnswers</name>
                <value>1</value>
                <type>Long</type>
            </property>
            <property>
                <name>compact</name>
                <value>True</value>
                <type>Boolean</type>
            </property>
            <property>
                <name>entryMode</name>
                <value>computed</value>
                <type>String</type>
            </property>
            <property>
                <name>expression</name>
                <value>return @{question 3}</value>
                <type>String</type>
            </property>
        </node>
        <node>
            <name>question4computed</name>
            <primaryNodeType>cards:Question</primaryNodeType>
            <property>
                <name>text</name>
                <value>Question 4 Computed. Should display the values from Question 4, formatted</value>
                <type>String</type>
            </property>
            <property>
                <name>displayMode</name>
                <value>formatted</value>
                <type>String</type>
            </property>
            <property>
                <name>entryMode</name>
                <value>computed</value>
                <type>String</type>
            </property>
            <property>
                <name>expression</name>
                <value><![CDATA[
var values = typeof(@{question4_multi}) != 'object' ? [@{question4_multi}] : @{question4_multi};
var result = "";
for (var i = 0; values && i < values.length; i++) {
  result += "\n* " + i + ": " + values[i];
}
return result;
                ]]></value>
                <type>String</type>
            </property>
        </node>
    </node>
</node>
