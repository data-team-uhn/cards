#!/bin/bash

# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

DEPLOYMENT_HOSTNAME=$1
OS_PACKAGE_LISTING_DOCKER_IMAGE=$2

resolve_ip () {
	HOSTNAME=$1 python3 -c 'import os; import socket; print(os.environ["HOSTNAME"] + ":" + socket.gethostbyname(os.environ["HOSTNAME"]))'
}

# Pull the aquasec/trivy Docker image and update it's cache
mkdir ~/trivy-cache
./trivy-utils/update_trivy_cache.sh

# Scan for VM OS vulnerabilities
cd trivy-utils
./scan_remote_package_list.sh $DEPLOYMENT_HOSTNAME ~/vm_os_slack_message.json --truncate_results 10 --markdown_report_file ~/vm_os_pkg_report.md
cd ..

# Scan for Docker OS vulnerabilities
CARDS_IMAGE_REPO_DIGEST=$(python3 github_get_docker_image_digest.py --deployment_hostname $DEPLOYMENT_HOSTNAME --docker_image_name cards) || exit -1
cd trivy-utils
docker run \
	--rm \
	--add-host $(resolve_ip ghcr.io) \
	--add-host $(resolve_ip index.docker.io) \
	--add-host $(resolve_ip production.cloudflare.docker.com) \
	-v $(realpath ~/trivy-cache):/root/.cache \
	aquasec/trivy image --security-checks vuln \
	--ignore-unfixed $OS_PACKAGE_LISTING_DOCKER_IMAGE:$CARDS_IMAGE_REPO_DIGEST \
	--format json \
	| python3 trivy_to_slack.py --package_emoji :whale: --truncate_results 10 --markdown_report_file ~/cards_container_os_pkg_report.md \
	> ~/docker_os_slack_message.json
cd ..

# Scan for Maven package vulnerabilities
cd trivy-utils
./scan_remote_maven_list.sh $DEPLOYMENT_HOSTNAME ~/maven_slack_message.json --package_emoji :coffee: --truncate_results 10 --markdown_report_file ~/maven_report.md
cd ..

# Scan for NPM/Yarn package vulnerabilities
cd trivy-utils
./scan_remote_npm_list.sh $DEPLOYMENT_HOSTNAME ~/npm_slack_message.json --package_emoji :octocat: --truncate_results 10 --markdown_report_file ~/npm_report.md
cd ..

# Generate the report for Slack
python3 generate_slack_vulnerability_report_for_host.py \
	--deployment_hostname $DEPLOYMENT_HOSTNAME \
	--vm_os_json_file ~/vm_os_slack_message.json \
	--docker_os_json_file ~/docker_os_slack_message.json \
	--maven_json_file ~/maven_slack_message.json \
	--npm_json_file ~/npm_slack_message.json \
	--complete_report_path "https://github.com/${GITHUB_REPOSITORY}/blob/main/reports/${DEPLOYMENT_HOSTNAME}.md" \
	--output ~/slack_blocks.json

# Generate the report for GitHub
echo "# $DEPLOYMENT_HOSTNAME" > ~/github_report.md
echo "" >> ~/github_report.md

echo "### VM OS" >> ~/github_report.md
echo "" >> ~/github_report.md

cat ~/vm_os_pkg_report.md >> ~/github_report.md
echo "" >> ~/github_report.md
echo "" >> ~/github_report.md

echo "### Docker Image" >> ~/github_report.md
echo "" >> ~/github_report.md

cat ~/cards_container_os_pkg_report.md >> ~/github_report.md
echo "" >> ~/github_report.md
echo "" >> ~/github_report.md

echo "### Maven Packages" >> ~/github_report.md
echo "" >> ~/github_report.md

cat ~/maven_report.md >> ~/github_report.md
echo "" >> ~/github_report.md
echo "" >> ~/github_report.md

echo "### NPM/Yarn Packages" >> ~/github_report.md
echo "" >> ~/github_report.md

cat ~/npm_report.md >> ~/github_report.md
echo "" >> ~/github_report.md
echo "" >> ~/github_report.md

# Clean up
rm ~/vm_os_slack_message.json
rm ~/docker_os_slack_message.json
rm ~/maven_slack_message.json
rm ~/npm_slack_message.json

# Clean up the *.md files
rm ~/vm_os_pkg_report.md
rm ~/cards_container_os_pkg_report.md
rm ~/maven_report.md
rm ~/npm_report.md

# Post the results to Slack
python3 post_message_blocks_to_slack.py ~/slack_blocks.json

# Post the report to GitHub
python3 github_publish_scan_report.py --deployment_hostname $DEPLOYMENT_HOSTNAME --markdown_report_file ~/github_report.md
