<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.uhndata.cards</groupId>
    <artifactId>cards-parent</artifactId>
    <version>0.9.25-SNAPSHOT</version>
  </parent>

  <artifactId>cards-integration-tests</artifactId>
  <packaging>slingstart</packaging>
  <name>CARDS integration tests</name>
  <description>Tests on the full CARDS distribution.</description>

  <properties>
    <test.host>localhost</test.host>
    <!-- If set to "true" this will start the launchpad with standard debug options, or set to a string to provide custom debug settings -->
    <launchpad.debug/>
  </properties>

  <build>
    <plugins>
      <!-- Reserve the port numbers used by the webapp during the build -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>reserve-network-port</id>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <minPortNumber>9000</minPortNumber>
              <portNames>
                <portName>http.port</portName>
                <portName>sling.control.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.sling</groupId>
        <artifactId>slingstart-maven-plugin</artifactId>
        <executions>
          <!-- This is responsible for starting the server before the tests run, and stopping it afterwards -->
          <execution>
            <id>start-container</id>
            <goals>
              <!-- Without specifying a phase for this execution, these goals bind by default to the pre-integration-test and post-integration-test phases -->
              <goal>start</goal>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <!-- As a slingstart module, the server will be built by default, so no specific execution needs to be declared for that. Here we just customize the package. -->
        <configuration>
          <!--
              We're adding the CARDS distribution here as a model fragment instead of in a provisioning file because of the way the version is handled.
              If we just specify io.uhndata.cards/cards//slingstart in a provisioning file, which means "use the version defined in the pom",
              due to a bug in the slingstart-maven-plugin the dependency itself will be included as well in the final jar, which will be invalid.
              If, instead, we specify a specific version, then that is duplication and will cause issues during the release.
              The ideal solution is to specify ${project.version}, which is the recommended Maven way of referencing modules sharing the same version,
              but that is not allowed in provisioning files.
              The inline model fragment in the pom file will be interpolated with Maven variables, so we can use ${project.version} as the dependency version.
          -->
          <model>
            [feature name="cards-distribution"]
            [artifacts]
            io.uhndata.cards/cards/${project.version}/slingstart
          </model>
          <setFeatureVersions>false</setFeatureVersions>
          <usePomDependencies>true</usePomDependencies>
          <!-- This configures the server started by the start-container execution above -->
          <servers>
            <server>
              <port>${http.port}</port>
              <controlPort>${sling.control.port}</controlPort>
              <contextPath>/</contextPath>
              <debug>${launchpad.debug}</debug>
            </server>
          </servers>
        </configuration>
      </plugin>

      <!-- This is a plugin designed to run integration tests (Surefire is more for unit tests) -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.2</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <systemPropertyVariables>
            <launchpad.http.server.url>http://${test.host}:${http.port}/</launchpad.http.server.url>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- Dependencies needed to compile the test classes -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.testing.rules</artifactId>
      <version>2.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.testing.clients</artifactId>
      <version>3.0.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>4.4.15</version>
    </dependency>
  </dependencies>
</project>
